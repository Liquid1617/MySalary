[dotenv@17.0.1] injecting env (6) from .env – [tip] encrypt with dotenvx: https://dotenvx.com
[dotenv@17.0.1] injecting env (0) from .env – [tip] encrypt with dotenvx: https://dotenvx.com
[dotenv@17.0.1] injecting env (0) from .env – [tip] encrypt with dotenvx: https://dotenvx.com
📊 Chart API debugging enabled
🚀 Server listening on http://0.0.0.0:3001
🌐 Also available at http://192.168.100.11:3001
Executing (default): SELECT 1+1 AS result
✅ Database connection successful
[0mGET /api/health [32m200[0m 3.074 ms - 70[0m
[0mGET /api/health [32m200[0m 0.403 ms - 70[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."email" = 'ilglaz@gmail.com';
[0mPOST /api/auth/login [32m200[0m 109.132 ms - 329[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
[0mGET /api/auth/me [36m304[0m 18.497 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
[0mGET /api/accounts [36m304[0m 15.684 ms - -[0m
Budget "Test 2" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T19:13:24.531Z to 2025-08-18T19:13:24.531Z
  Found 3 transactions, total spent: 30
[0mGET /api/auth/me [36m304[0m 17.343 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 30.948 ms - 757[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Запрос курсов валют для базовой валюты: USD
[0mGET /api/accounts [36m304[0m 11.777 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 19.146 ms - -[0m
Запрос курсов валют для базовой валюты: USD
[0mGET /api/transactions [36m304[0m 42.021 ms - -[0m
[0mGET /api/networth [32m200[0m 660.995 ms - 1060[0m
[0mGET /api/networth [32m200[0m 642.249 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 11.519 ms - 1060[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 9.757 ms - -[0m
[0mGET /api/networth [32m200[0m 13.535 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 14.788 ms - -[0m
[0mGET /api/transactions [36m304[0m 24.425 ms - -[0m
[0mGET /api/transactions [36m304[0m 18.669 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.723 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 10.340 ms - -[0m
[0mGET /api/networth [32m200[0m 10.129 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 9.534 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 26.880 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 28.810 ms - -[0m
[0mGET /api/transactions [36m304[0m 29.619 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 18.842 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 18.276 ms - -[0m
[0mGET /api/networth [32m200[0m 19.876 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 24.806 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 25.046 ms - -[0m
[0mGET /api/accounts [36m304[0m 18.826 ms - -[0m
[0mGET /api/networth [32m200[0m 19.748 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 24.768 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 4.990 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.435 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.177 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 10.848 ms - -[0m
[0mGET /api/accounts [36m304[0m 4.703 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 11.663 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.096 ms - -[0m
[0mGET /api/networth [32m200[0m 9.207 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 17.148 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 23.241 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 17.949 ms - -[0m
[0mGET /api/networth [32m200[0m 21.936 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 23.302 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 17.690 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 15.123 ms - -[0m
[0mGET /api/networth [32m200[0m 16.459 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 22.387 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.706 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 6.162 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "name"=$1,"limit_amount"=$2,"custom_start_date"=$3,"custom_end_date"=$4,"updated_at"=$5 WHERE "id" = $6
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 19:35:55.578 +00:00','2025-07-18 19:35:55.578 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 52.215 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.605 ms - 776[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.669 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.409 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 26.731 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 23.651 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 23.776 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 24.122 ms - 1060[0m
[0mGET /api/networth [32m200[0m 28.321 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 30.375 ms - -[0m
[0mGET /api/accounts [36m304[0m 7.508 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 112.654 ms - 1060[0m
[0mGET /api/networth [32m200[0m 120.486 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 118.180 ms - -[0m
[0mGET /api/transactions [36m304[0m 122.422 ms - -[0m
[0mGET /api/transactions [36m304[0m 122.693 ms - -[0m
[0mGET /api/transactions [36m304[0m 126.753 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.387 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 8.705 ms - -[0m
[0mGET /api/networth [32m200[0m 7.945 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 7.107 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.797 ms - -[0m
[0mGET /api/categories [36m304[0m 5.352 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Deprecation warning: value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.
Arguments: 
[0] _isAMomentObject: true, _isUTC: false, _useUTC: false, _l: undefined, _i: 2025-0, _f: undefined, _strict: undefined, _locale: [object Object]
Error
    at hooks.createFromInputFallback (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:324:25)
    at configFromString (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:2613:19)
    at configFromInput (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:3056:13)
    at prepareConfig (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:3039:13)
    at createFromConfig (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:3006:44)
    at createLocalOrUTC (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:3100:16)
    at createLocal (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:3104:16)
    at hooks (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/moment/moment.js:16:29)
    at Budget._sanitize (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/data-types.js:356:14)
    at Budget._sanitize (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/dialects/postgres/data-types.js:44:22)
Error updating budget: ValidationError [SequelizeValidationError]: Validation error: Validation isDate on custom_start_date failed
    at InstanceValidator._validate (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/instance-validator.js:50:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async InstanceValidator._validateAndRunHooks (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/instance-validator.js:60:7)
    at async InstanceValidator.validate (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/instance-validator.js:54:12)
    at async Budget.save (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/model.js:2426:7)
    at async Budget.update (/Users/ilaglazunov/Documents/projects/personal/MySalary/server/node_modules/sequelize/lib/model.js:2598:12)
    at async /Users/ilaglazunov/Documents/projects/personal/MySalary/server/routes/budgets.js:256:5 {
  errors: [
    ValidationErrorItem {
      message: 'Validation isDate on custom_start_date failed',
      type: 'Validation error',
      path: 'custom_start_date',
      value: 'Invalid date',
      origin: 'FUNCTION',
      instance: [Budget],
      validatorKey: 'isDate',
      validatorName: 'isDate',
      validatorArgs: [Array],
      original: [Error]
    }
  ]
}
[0mPUT /api/budgets/2 [31m500[0m 30.674 ms - 35[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 13.678 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 15.728 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.075 ms - -[0m
[0mGET /api/categories [36m304[0m 3.345 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.685 ms - -[0m
[0mGET /api/categories [36m304[0m 5.201 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 16.305 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 20.964 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 10.640 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 13.092 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 5.263 ms - -[0m
[0mGET /api/categories [36m304[0m 7.677 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 42.851 ms - -[0m
[0mGET /api/categories [36m304[0m 48.165 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.542 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.747 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 22.604 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 21.375 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 20.663 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 16.840 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 18.052 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 21.401 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 10.087 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 1.924 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 3.576 ms - -[0m
[0mGET /api/categories [36m304[0m 10.855 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 15.863 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 20.708 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 107.930 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.049 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.222 ms - -[0m
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 23.201 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 18.832 ms - -[0m
[0mGET /api/networth [32m200[0m 19.346 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 3.139 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 26.649 ms - -[0m
[0mGET /api/networth [32m200[0m 8.060 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 14.218 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.313 ms - -[0m
[0mGET /api/categories [36m304[0m 2.529 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 25.707 ms - 1060[0m
[0mGET /api/networth [32m200[0m 21.447 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 24.982 ms - -[0m
[0mGET /api/transactions [36m304[0m 25.930 ms - -[0m
[0mGET /api/transactions [36m304[0m 27.920 ms - -[0m
[0mGET /api/transactions [36m304[0m 30.814 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 4.135 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.399 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 5.680 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 7.912 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 18.542 ms - -[0m
[0mGET /api/categories [36m304[0m 21.747 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 38.687 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 42.903 ms - -[0m
[0mGET /api/transactions [36m304[0m 44.965 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.217 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 10.119 ms - -[0m
[0mGET /api/networth [32m200[0m 8.009 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 7.747 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 11.656 ms - -[0m
[0mGET /api/networth [32m200[0m 13.529 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.586 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 33.232 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 33.320 ms - -[0m
[0mGET /api/auth/me [36m304[0m 37.493 ms - -[0m
[0mGET /api/transactions [36m304[0m 38.958 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 3.631 ms - -[0m
[0mGET /api/categories [36m304[0m 9.989 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.302 ms - -[0m
[0mGET /api/categories [36m304[0m 3.682 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 13.743 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 19.630 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 21.274 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 20.852 ms - -[0m
[0mGET /api/transactions [36m304[0m 25.223 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 5.130 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 9.511 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 9.265 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 5.311 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 25.086 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 19.489 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 20.858 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 15.413 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 25.764 ms - -[0m
[0mGET /api/auth/me [36m304[0m 18.004 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Запрос курсов валют для базовой валюты: USD
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 22.839 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Запрос курсов валют для базовой валюты: USD
[0mGET /api/transactions [36m304[0m 16.138 ms - -[0m
[0mGET /api/transactions [36m304[0m 30.574 ms - -[0m
[0mGET /api/accounts [36m304[0m 10.026 ms - -[0m
[0mGET /api/networth [32m200[0m 595.135 ms - 1060[0m
[0mGET /api/networth [32m200[0m 620.876 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 33.333 ms - -[0m
[0mGET /api/auth/me [36m304[0m 28.515 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 32.821 ms - 1060[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 32.933 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 5.946 ms - -[0m
[0mGET /api/networth [32m200[0m 7.613 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 38.934 ms - -[0m
[0mGET /api/transactions [36m304[0m 42.194 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 18.904 ms - -[0m
[0mGET /api/auth/me [36m304[0m 14.928 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 16.774 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 16.788 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 2.589 ms - -[0m
[0mGET /api/networth [32m200[0m 12.449 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 30.933 ms - -[0m
[0mGET /api/transactions [36m304[0m 31.130 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.551 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 23.913 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.993 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 11.134 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 11.399 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 11.418 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 5.002 ms - -[0m
[0mGET /api/networth [32m200[0m 13.540 ms - 1060[0m
[0mGET /api/networth [32m200[0m 16.310 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 15.987 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 47.334 ms - -[0m
[0mGET /api/transactions [36m304[0m 45.495 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 16.417 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 16.704 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 16.429 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 15.337 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 21.646 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 22.300 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 21.732 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 3.656 ms - -[0m
[0mGET /api/networth [32m200[0m 11.268 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 18.099 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 9.762 ms - 1060[0m
[0mGET /api/networth [32m200[0m 11.852 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.204 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.518 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.983 ms - -[0m
[0mGET /api/transactions [36m304[0m 17.572 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 16.355 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 22.211 ms - -[0m
[0mGET /api/transactions [36m304[0m 23.811 ms - -[0m
[0mGET /api/networth [32m200[0m 22.681 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.263 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 5.562 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 21.808 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 26.333 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 26.487 ms - -[0m
[0mGET /api/transactions [36m304[0m 31.410 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 15.057 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 18.786 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.382 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 25.332 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 24.869 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 22.915 ms - -[0m
[0mGET /api/networth [32m200[0m 23.849 ms - 1060[0m
[0mGET /api/auth/me [36m304[0m 22.588 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 4.985 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 2.728 ms - -[0m
[0mGET /api/transactions [36m304[0m 22.718 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 4.771 ms - 1060[0m
[0mGET /api/networth [32m200[0m 12.341 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 14.407 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.350 ms - -[0m
[0mGET /api/transactions [36m304[0m 13.138 ms - -[0m
[0mGET /api/transactions [36m304[0m 15.462 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 9.015 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 5.106 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.069 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 10.291 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.911 ms - -[0m
[0mGET /api/categories [36m304[0m 5.222 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.823 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 11.425 ms - -[0m
[0mGET /api/networth [32m200[0m 11.279 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 8.001 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.324 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.063 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 9.093 ms - -[0m
[0mGET /api/networth [32m200[0m 8.430 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 7.128 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 19.372 ms - -[0m
[0mGET /api/auth/me [36m304[0m 24.316 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 1.901 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 134.351 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
[0mGET /api/networth [32m200[0m 143.434 ms - 1060[0m
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 145.747 ms - -[0m
[0mGET /api/transactions [36m304[0m 146.868 ms - -[0m
[0mGET /api/transactions [36m304[0m 148.914 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 162.206 ms - -[0m
[0mGET /api/transactions [36m304[0m 169.504 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 9.052 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 3.375 ms - -[0m
[0mGET /api/networth [32m200[0m 9.710 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 16.182 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 6.730 ms - -[0m
[0mGET /api/categories [36m304[0m 9.900 ms - -[0m
[0mGET /api/auth/me [36m304[0m 12.061 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.450 ms - -[0m
[0mGET /api/categories [36m304[0m 4.524 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.239 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 5.399 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 10.059 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.213 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 9.450 ms - -[0m
[0mGET /api/auth/me [36m304[0m 11.309 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 12.456 ms - -[0m
[0mGET /api/accounts [36m304[0m 9.478 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 12.509 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 15.871 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.169 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 4.964 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.611 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 17.564 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 14.741 ms - -[0m
[0mGET /api/networth [32m200[0m 17.548 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.102 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.524 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.860 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 10.178 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 9.959 ms - -[0m
[0mGET /api/transactions [36m304[0m 15.851 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 6.697 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.479 ms - -[0m
[0mGET /api/categories [36m304[0m 6.503 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.428 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 5.706 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.810 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 5.723 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 4.350 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.317 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 19.485 ms - -[0m
[0mGET /api/transactions [36m304[0m 31.055 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.799 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 14.956 ms - -[0m
[0mGET /api/networth [32m200[0m 21.844 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 21.420 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 5.459 ms - -[0m
[0mGET /api/transactions [36m304[0m 20.767 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.337 ms - -[0m
[0mGET /api/accounts [36m304[0m 8.557 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 15.068 ms - -[0m
[0mGET /api/networth [32m200[0m 15.030 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
[0mGET /api/auth/me [36m304[0m 99.099 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
[0mGET /api/transactions [36m304[0m 110.412 ms - -[0m
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 112.791 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 9.559 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 15.538 ms - -[0m
[0mGET /api/accounts [36m304[0m 9.539 ms - -[0m
[0mGET /api/networth [32m200[0m 14.456 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.152 ms - -[0m
[0mGET /api/categories [36m304[0m 4.607 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.015 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.222 ms - -[0m
[0mGET /api/categories [36m304[0m 6.095 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.822 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 10.740 ms - -[0m
[0mGET /api/accounts [36m304[0m 5.061 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 12.723 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 21.054 ms - -[0m
[0mGET /api/transactions [36m304[0m 29.226 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 11.943 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 4.949 ms - -[0m
[0mGET /api/networth [32m200[0m 12.592 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 17.255 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 13.284 ms - -[0m
[0mGET /api/transactions [36m304[0m 24.657 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 19.462 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 24.115 ms - -[0m
[0mGET /api/transactions [36m304[0m 25.361 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.025 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.988 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 15.762 ms - -[0m
[0mGET /api/transactions [36m304[0m 22.780 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 20.103 ms - -[0m
[0mGET /api/transactions [36m304[0m 26.845 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 22.920 ms - -[0m
[0mGET /api/transactions [36m304[0m 27.167 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 24.979 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 19.999 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 28.377 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 33.225 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 8.954 ms - -[0m
[0mGET /api/auth/me [36m304[0m 11.223 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 2.243 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.664 ms - -[0m
[0mGET /api/categories [36m304[0m 2.607 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.692 ms - -[0m
[0mGET /api/categories [36m304[0m 1.671 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 9.172 ms - -[0m
[0mGET /api/accounts [36m304[0m 4.302 ms - -[0m
[0mGET /api/networth [32m200[0m 10.652 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 16.342 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 3.054 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.933 ms - -[0m
[0mGET /api/categories [36m304[0m 6.012 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.203 ms - -[0m
[0mGET /api/categories [36m304[0m 4.950 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.346 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 8.496 ms - -[0m
[0mGET /api/networth [32m200[0m 7.918 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 7.413 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 8.003 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 7.979 ms - -[0m
[0mGET /api/transactions [36m304[0m 10.771 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.653 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 29.867 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Запрос курсов валют для базовой валюты: USD
[0mGET /api/accounts [36m304[0m 28.801 ms - -[0m
[0mGET /api/transactions [36m304[0m 36.149 ms - -[0m
[0mGET /api/networth [32m200[0m 653.100 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 5.454 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.251 ms - -[0m
[0mGET /api/categories [36m304[0m 6.085 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.770 ms - -[0m
[0mGET /api/categories [36m304[0m 2.517 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:38:29.641 +00:00','2025-07-18 21:38:29.641 +00:00'),(DEFAULT,3,11,'2025-07-18 21:38:29.641 +00:00','2025-07-18 21:38:29.641 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPOST /api/budgets [32m201[0m 49.155 ms - 695[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 13.192 ms - 1255[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.112 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 12.421 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 12.973 ms - -[0m
[0mGET /api/transactions [36m304[0m 18.675 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.798 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 4.037 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 5.366 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Создание транзакции: {
  user_id: 4,
  account_id: 5,
  category_id: 2,
  amount: 10,
  transaction_type: 'expense',
  description: '',
  transfer_to: undefined
}
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol", "currency"."is_active" AS "currency.is_active", "currency"."createdAt" AS "currency.createdAt", "currency"."updatedAt" AS "currency.updatedAt" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."id" = 5 AND "Account"."user_id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): INSERT INTO "Transactions" ("id","user_id","account_id","category_id","amount","transaction_type","description","transaction_date","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","user_id","account_id","category_id","amount","transaction_type","transfer_to","description","transaction_date","createdAt","updatedAt";
Транзакция создана: 49
Executing (default): UPDATE "Accounts" SET "balance"=$1,"updatedAt"=$2 WHERE "id" = $3
Баланс счета обновлен: 900 -> 890
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "Transaction"."id" = 49;
[0mPOST /api/transactions [32m201[0m 62.360 ms - 829[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [32m200[0m 12.241 ms - 32832[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [32m200[0m 11.944 ms - 1539[0m
[0mGET /api/networth [32m200[0m 16.534 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.455 ms - -[0m
[0mGET /api/transactions [36m304[0m 17.857 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 11.058 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 9.481 ms - -[0m
[0mGET /api/networth [32m200[0m 10.914 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 18.412 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 12.650 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.209 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 5.546 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.797 ms - -[0m
[0mGET /api/categories [36m304[0m 5.222 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.843 ms - -[0m
[0mGET /api/categories [36m304[0m 3.761 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.660 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 7.394 ms - -[0m
[0mGET /api/networth [32m200[0m 9.169 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.478 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 9.139 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.720 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 9.899 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 11.054 ms - -[0m
[0mGET /api/accounts [36m304[0m 5.796 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 10.245 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 7.687 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.591 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Создание транзакции: {
  user_id: 4,
  account_id: 9,
  category_id: 11,
  amount: 10,
  transaction_type: 'expense',
  description: '',
  transfer_to: undefined
}
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol", "currency"."is_active" AS "currency.is_active", "currency"."createdAt" AS "currency.createdAt", "currency"."updatedAt" AS "currency.updatedAt" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."id" = 9 AND "Account"."user_id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "Transactions" ("id","user_id","account_id","category_id","amount","transaction_type","description","transaction_date","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","user_id","account_id","category_id","amount","transaction_type","transfer_to","description","transaction_date","createdAt","updatedAt";
Транзакция создана: 50
Executing (default): UPDATE "Accounts" SET "balance"=$1,"updatedAt"=$2 WHERE "id" = $3
Баланс счета обновлен: 1030 -> 1020
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "Transaction"."id" = 50;
[0mPOST /api/transactions [32m201[0m 59.919 ms - 788[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [32m200[0m 13.514 ms - 33642[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [32m200[0m 10.766 ms - 1539[0m
[0mGET /api/networth [32m200[0m 13.559 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.239 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.485 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 9.878 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 9.010 ms - -[0m
[0mGET /api/networth [32m200[0m 11.869 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 17.600 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.452 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.414 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 9.739 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 11.664 ms - -[0m
[0mGET /api/accounts [36m304[0m 9.503 ms - -[0m
[0mGET /api/networth [32m200[0m 10.467 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 7.075 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.076 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.392 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 3.024 ms - -[0m
[0mGET /api/networth [32m200[0m 6.204 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 10.930 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 194.908 ms - -[0m
[0mGET /api/transactions [36m304[0m 202.327 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.349 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 4.035 ms - -[0m
[0mGET /api/networth [32m200[0m 8.450 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.748 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.229 ms - -[0m
[0mGET /api/transactions [36m304[0m 16.509 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.045 ms - -[0m
[0mGET /api/currencies [36m304[0m 3.045 ms - -[0m
[0mGET /api/categories [36m304[0m 4.706 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.058 ms - -[0m
[0mGET /api/categories [36m304[0m 3.702 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:40:14.718 +00:00','2025-07-18 21:40:14.718 +00:00'),(DEFAULT,3,11,'2025-07-18 21:40:14.718 +00:00','2025-07-18 21:40:14.718 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 28.681 ms - 695[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.974 ms - 1255[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 16.848 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 38.690 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 38.306 ms - -[0m
[0mGET /api/auth/me [36m304[0m 42.918 ms - -[0m
[0mGET /api/transactions [36m304[0m 48.918 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 108.184 ms - -[0m
[0mGET /api/transactions [36m304[0m 116.895 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 4.232 ms - -[0m
[0mGET /api/categories [36m304[0m 6.647 ms - -[0m
[0mGET /api/auth/me [36m304[0m 8.353 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 2.022 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 7.184 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:44:41.747 +00:00','2025-07-18 21:44:41.747 +00:00'),(DEFAULT,3,11,'2025-07-18 21:44:41.747 +00:00','2025-07-18 21:44:41.747 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 47.152 ms - 695[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 9.733 ms - 1255[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 22.594 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 18.564 ms - -[0m
[0mGET /api/categories [36m304[0m 23.692 ms - -[0m
[0mGET /api/auth/me [36m304[0m 26.046 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.429 ms - -[0m
[0mGET /api/categories [36m304[0m 4.275 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 24.414 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 22.340 ms - -[0m
[0mGET /api/networth [32m200[0m 24.217 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 28.808 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 8.442 ms - -[0m
[0mGET /api/currencies [36m304[0m 7.015 ms - -[0m
[0mGET /api/categories [36m304[0m 9.160 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.014 ms - -[0m
[0mGET /api/categories [36m304[0m 2.306 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,4,14,'2025-07-18 21:45:29.426 +00:00','2025-07-18 21:45:29.426 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 4;
[0mPOST /api/budgets [32m201[0m 33.348 ms - 493[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/auth/me [36m304[0m 8.018 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Аааа" (ID: 4):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 14.022 ms - -[0m
[0mGET /api/networth [32m200[0m 11.578 ms - 1060[0m
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 17.281 ms - 1648[0m
[0mGET /api/accounts [36m304[0m 11.263 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.112 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.905 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.508 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 135.117 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 129.337 ms - -[0m
[0mGET /api/networth [32m200[0m 131.693 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 143.868 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 2.115 ms - -[0m
[0mGET /api/transactions [36m304[0m 7.687 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 2.177 ms - -[0m
[0mGET /api/categories [36m304[0m 2.215 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.805 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.667 ms - -[0m
[0mGET /api/categories [36m304[0m 2.181 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '4' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 4
Executing (default): DELETE FROM "Budgets" WHERE "id" = 4
[0mDELETE /api/budgets/4 [32m204[0m 14.101 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 18.166 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.853 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 19.784 ms - 1255[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 13.270 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 17.112 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 7.381 ms - 1060[0m
[0mGET /api/networth [32m200[0m 21.055 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 6.315 ms - -[0m
[0mGET /api/transactions [36m304[0m 25.803 ms - -[0m
[0mGET /api/transactions [36m304[0m 22.715 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.103 ms - -[0m
[0mGET /api/auth/me [36m304[0m 6.159 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.929 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.286 ms - -[0m
[0mGET /api/transactions [36m304[0m 9.712 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 3.286 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.074 ms - -[0m
[0mGET /api/categories [36m304[0m 3.993 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.513 ms - -[0m
[0mGET /api/categories [36m304[0m 3.695 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:49:49.947 +00:00','2025-07-18 21:49:49.947 +00:00'),(DEFAULT,3,11,'2025-07-18 21:49:49.947 +00:00','2025-07-18 21:49:49.947 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 27.335 ms - 697[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Transport and travel" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 11.067 ms - 1255[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 15.126 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 5.892 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 11.162 ms - -[0m
[0mGET /api/networth [32m200[0m 10.945 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 5.151 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 3.614 ms - -[0m
[0mGET /api/transactions [36m304[0m 9.949 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.071 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.152 ms - -[0m
[0mGET /api/categories [36m304[0m 4.460 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.847 ms - -[0m
[0mGET /api/categories [36m304[0m 2.891 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "name"=$1,"limit_amount"=$2,"updated_at"=$3 WHERE "id" = $4
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:49:59.547 +00:00','2025-07-18 21:49:59.547 +00:00'),(DEFAULT,3,11,'2025-07-18 21:49:59.547 +00:00','2025-07-18 21:49:59.547 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 34.930 ms - 700[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 6.500 ms - 1258[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.392 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 8.141 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.481 ms - -[0m
[0mGET /api/categories [36m304[0m 7.854 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 2.976 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.392 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 154.187 ms - -[0m
[0mGET /api/auth/me [36m304[0m 155.144 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 159.574 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.723 ms - -[0m
[0mGET /api/categories [36m304[0m 1.630 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:50:57.945 +00:00','2025-07-18 21:50:57.945 +00:00'),(DEFAULT,3,11,'2025-07-18 21:50:57.945 +00:00','2025-07-18 21:50:57.945 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 140.753 ms - 702[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-12' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-12T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 2 transactions, total spent: 20
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 8.249 ms - 1263[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 13.522 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 8.213 ms - -[0m
[0mGET /api/currencies [36m304[0m 6.059 ms - -[0m
[0mGET /api/categories [36m304[0m 9.950 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.499 ms - -[0m
[0mGET /api/categories [36m304[0m 3.613 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:51:05.967 +00:00','2025-07-18 21:51:05.967 +00:00'),(DEFAULT,3,11,'2025-07-18 21:51:05.967 +00:00','2025-07-18 21:51:05.967 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 31.897 ms - 700[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 5.363 ms - 1258[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 10.742 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 196.916 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/categories [36m304[0m 211.275 ms - -[0m
[0mGET /api/auth/me [36m304[0m 213.718 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.439 ms - -[0m
[0mGET /api/categories [36m304[0m 5.690 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"custom_start_date"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 2;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 11;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,3,2,'2025-07-18 21:55:18.171 +00:00','2025-07-18 21:55:18.171 +00:00'),(DEFAULT,3,11,'2025-07-18 21:55:18.171 +00:00','2025-07-18 21:55:18.171 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 3;
[0mPUT /api/budgets/3 [32m200[0m 29.630 ms - 700[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 12.931 ms - 1258[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 17.452 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.951 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 5.294 ms - -[0m
[0mGET /api/networth [32m200[0m 7.877 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 13.487 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 9.192 ms - -[0m
[0mGET /api/auth/me [36m304[0m 10.937 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.308 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 8.225 ms - -[0m
[0mGET /api/networth [32m200[0m 7.894 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 7.643 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.774 ms - -[0m
[0mGET /api/auth/me [36m304[0m 8.228 ms - -[0m
[0mGET /api/categories [36m304[0m 7.804 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.220 ms - -[0m
[0mGET /api/categories [36m304[0m 3.409 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 21:55:36.507 +00:00','2025-07-18 21:55:36.507 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPOST /api/budgets [32m201[0m 38.254 ms - 490[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 9.952 ms - 1648[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.841 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.827 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 12.331 ms - -[0m
[0mGET /api/networth [32m200[0m 13.696 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.390 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.853 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.041 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 176.469 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 178.259 ms - -[0m
[0mGET /api/categories [36m304[0m 184.068 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 3.327 ms - -[0m
[0mGET /api/currencies [36m304[0m 3.146 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 21:56:20.688 +00:00','2025-07-18 21:56:20.688 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 66.223 ms - 491[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-08-19');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-08-19T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 18.273 ms - 1649[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 23.583 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 5.910 ms - -[0m
[0mGET /api/auth/me [36m304[0m 8.735 ms - -[0m
[0mGET /api/categories [36m304[0m 7.795 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 5.224 ms - -[0m
[0mGET /api/currencies [36m304[0m 5.558 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 21:56:35.737 +00:00','2025-07-18 21:56:35.737 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 16.747 ms - 491[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-08-19');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-08-19T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 8.278 ms - 1649[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 15.410 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 3.927 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.878 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 8.076 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.924 ms - -[0m
[0mGET /api/categories [36m304[0m 4.097 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 21:56:40.013 +00:00','2025-07-18 21:56:40.013 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 22.098 ms - 490[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 7.035 ms - 1648[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.481 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 45.831 ms - -[0m
[0mGET /api/networth [32m200[0m 46.157 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 46.370 ms - -[0m
[0mGET /api/transactions [36m304[0m 54.335 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.653 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 21.280 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 2.598 ms - -[0m
[0mGET /api/auth/me [36m304[0m 7.507 ms - -[0m
[0mGET /api/categories [36m304[0m 6.935 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.800 ms - -[0m
[0mGET /api/categories [36m304[0m 2.734 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 22:01:18.886 +00:00','2025-07-18 22:01:18.886 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 30.826 ms - 490[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 13.666 ms - 1648[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 13.770 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 19.623 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 25.077 ms - -[0m
[0mGET /api/categories [36m304[0m 25.002 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.476 ms - -[0m
[0mGET /api/categories [36m304[0m 3.598 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 22:01:40.848 +00:00','2025-07-18 22:01:40.848 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 27.525 ms - 492[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-14' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-14T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.283 ms - 1650[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 15.254 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 11.208 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 15.020 ms - -[0m
[0mGET /api/categories [36m304[0m 14.759 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 2.585 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.125 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 5;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,5,5,'2025-07-18 22:01:58.266 +00:00','2025-07-18 22:01:58.266 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 5;
[0mPUT /api/budgets/5 [32m200[0m 21.845 ms - 490[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 9.445 ms - 1648[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 20.659 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 16.412 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 19.255 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.348 ms - -[0m
[0mGET /api/auth/me [36m304[0m 19.031 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 19.723 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.770 ms - -[0m
[0mGET /api/accounts [36m304[0m 4.766 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 7.967 ms - -[0m
[0mGET /api/transactions [36m304[0m 26.971 ms - -[0m
[0mGET /api/networth [32m200[0m 11.763 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 1.468 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 1.510 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 0.970 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 1.755 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.034 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 5.162 ms - -[0m
[0mGET /api/networth [32m200[0m 4.753 ms - 1060[0m
[0mGET /api/auth/me [36m304[0m 3.950 ms - -[0m
[0mGET /api/transactions [36m304[0m 5.060 ms - -[0m
[0mGET /api/accounts [36m304[0m 6.388 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 188.819 ms - -[0m
[0mGET /api/networth [32m200[0m 193.448 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 193.625 ms - -[0m
[0mGET /api/transactions [36m304[0m 208.963 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 3.791 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.750 ms - -[0m
[0mGET /api/categories [36m304[0m 4.329 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.695 ms - -[0m
[0mGET /api/categories [36m304[0m 1.668 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,8,15,'2025-07-18 22:07:13.951 +00:00','2025-07-18 22:07:13.951 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 8;
[0mPOST /api/budgets [32m201[0m 26.345 ms - 489[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (15) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Фывфыв" (ID: 8):
  Categories: [15]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 17.405 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 20.752 ms - 2037[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 12.349 ms - -[0m
[0mGET /api/transactions [36m304[0m 21.893 ms - -[0m
[0mGET /api/networth [32m200[0m 17.057 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.645 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.591 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.272 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.835 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 18.202 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 17.791 ms - -[0m
[0mGET /api/transactions [36m304[0m 24.298 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 19.238 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.800 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 93.889 ms - -[0m
[0mGET /api/transactions [36m304[0m 96.787 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 8.026 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/categories [36m304[0m 11.315 ms - -[0m
[0mGET /api/auth/me [36m304[0m 16.137 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.666 ms - -[0m
[0mGET /api/categories [36m304[0m 2.901 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.120 ms - -[0m
[0mGET /api/categories [36m304[0m 4.720 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.572 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.438 ms - -[0m
[0mGET /api/categories [36m304[0m 1.395 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '8' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 8
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 15;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,8,15,'2025-07-18 22:11:11.576 +00:00','2025-07-18 22:11:11.576 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 8;
[0mPUT /api/budgets/8 [32m200[0m 41.898 ms - 489[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (15) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Фывфыв" (ID: 8):
  Categories: [15]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 14.721 ms - 2037[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 18.028 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.850 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (15) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Фывфыв" (ID: 8):
  Categories: [15]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 20.350 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.127 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 15.175 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 15.804 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 20.330 ms - -[0m
[0mGET /api/accounts [36m304[0m 3.568 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 7.357 ms - -[0m
[0mGET /api/networth [32m200[0m 7.400 ms - 1060[0m
[0mGET /api/networth [32m200[0m 22.771 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.925 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.660 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.728 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.519 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.528 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 2.298 ms - -[0m
[0mGET /api/transactions [36m304[0m 5.708 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 88.754 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 94.247 ms - -[0m
[0mGET /api/categories [36m304[0m 93.554 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 1.697 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.409 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 23.893 ms - -[0m
[0mGET /api/auth/me [36m304[0m 19.742 ms - -[0m
[0mGET /api/networth [32m200[0m 23.199 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 23.317 ms - -[0m
[0mGET /api/transactions [36m304[0m 30.764 ms - -[0m
[0mGET /api/transactions [36m304[0m 30.646 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 129.398 ms - -[0m
[0mGET /api/auth/me [36m304[0m 138.041 ms - -[0m
[0mGET /api/categories [36m304[0m 137.327 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 1.814 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.546 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '8' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 8
Executing (default): DELETE FROM "Budgets" WHERE "id" = 8
[0mDELETE /api/budgets/8 [32m204[0m 26.432 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 34.477 ms - -[0m
[0mGET /api/auth/me [36m304[0m 36.722 ms - -[0m
[0mGET /api/auth/me [36m304[0m 36.823 ms - -[0m
[0mGET /api/auth/me [36m304[0m 44.242 ms - -[0m
[0mGET /api/auth/me [36m304[0m 36.533 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/auth/me [36m304[0m 5.475 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.879 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 47.228 ms - 1648[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 10.876 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 10.546 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 13.630 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/transactions [36m304[0m 10.642 ms - -[0m
[0mGET /api/categories [36m304[0m 5.447 ms - -[0m
[0mGET /api/auth/me [36m304[0m 6.243 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.928 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 18.061 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.055 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (5) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Ffff" (ID: 5):
  Categories: [5]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 21.356 ms - -[0m
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 26.889 ms - -[0m
[0mGET /api/auth/me [36m304[0m 19.024 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 20.007 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 16.465 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 23.773 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 1.685 ms - -[0m
[0mGET /api/networth [32m200[0m 4.173 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.639 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.905 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.661 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.075 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.095 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.196 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 1.471 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.683 ms - -[0m
[0mGET /api/categories [36m304[0m 4.146 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.653 ms - -[0m
[0mGET /api/categories [36m304[0m 2.107 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '5' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 5
Executing (default): DELETE FROM "Budgets" WHERE "id" = 5
[0mDELETE /api/budgets/5 [32m204[0m 20.770 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (2, 11) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Transport and travelddd" (ID: 3):
  Categories: [2, 11]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 9.974 ms - 1258[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 177.101 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.656 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.563 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.880 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.224 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 9.175 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 13.500 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.337 ms - -[0m
[0mGET /api/auth/me [36m304[0m 14.576 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 9.105 ms - -[0m
[0mGET /api/networth [32m200[0m 12.492 ms - 1060[0m
[0mGET /api/networth [32m200[0m 15.713 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 148.743 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 148.918 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 149.472 ms - -[0m
[0mGET /api/auth/me [36m304[0m 149.345 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 1.282 ms - -[0m
[0mGET /api/networth [32m200[0m 4.655 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 155.551 ms - -[0m
[0mGET /api/transactions [36m304[0m 160.580 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 19.768 ms - -[0m
[0mGET /api/transactions [36m304[0m 27.289 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 5.349 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.762 ms - -[0m
[0mGET /api/categories [36m304[0m 6.144 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.133 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.567 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '3' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 3
Executing (default): DELETE FROM "Budgets" WHERE "id" = 3
[0mDELETE /api/budgets/3 [32m204[0m 16.482 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.204 ms - 776[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.051 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 5.458 ms - -[0m
[0mGET /api/networth [32m200[0m 8.106 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 12.343 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 26.498 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.278 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-08-18T00:00:00.000Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [36m304[0m 23.115 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 17.500 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 19.023 ms - -[0m
[0mGET /api/transactions [36m304[0m 24.757 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 24.392 ms - 1060[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 16.907 ms - -[0m
[0mGET /api/accounts [36m304[0m 7.252 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 13.034 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.016 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.914 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.498 ms - -[0m
[0mGET /api/transactions [36m304[0m 19.521 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 4.343 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.658 ms - -[0m
[0mGET /api/categories [36m304[0m 5.598 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.093 ms - -[0m
[0mGET /api/categories [36m304[0m 2.861 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"custom_end_date"=$4,"updated_at"=$5 WHERE "id" = $6
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 22:28:47.883 +00:00','2025-07-18 22:28:47.883 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 22.898 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 8.130 ms - 772[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 13.005 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 4.221 ms - -[0m
[0mGET /api/categories [36m304[0m 6.402 ms - -[0m
[0mGET /api/auth/me [36m304[0m 8.062 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 3.008 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 7.221 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 22:28:58.041 +00:00','2025-07-18 22:28:58.041 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 26.388 ms - 495[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-08-19');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-08-19T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.379 ms - 773[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 24.006 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 3.990 ms - -[0m
[0mGET /api/categories [36m304[0m 3.392 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.909 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.408 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.785 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 22:29:03.136 +00:00','2025-07-18 22:29:03.136 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 15.500 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 9.308 ms - 772[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 16.491 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.117 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 7.430 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 3.146 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.128 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 7.538 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 9.932 ms - 1060[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 11.866 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 8.049 ms - -[0m
[0mGET /api/networth [32m200[0m 14.028 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 11.803 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.075 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.957 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 5.895 ms - -[0m
[0mGET /api/networth [32m200[0m 5.120 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 5.239 ms - -[0m
[0mGET /api/transactions [36m304[0m 14.404 ms - -[0m
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 2.949 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.049 ms - -[0m
[0mGET /api/categories [36m304[0m 4.399 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.302 ms - -[0m
[0mGET /api/categories [36m304[0m 3.404 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,9,14,'2025-07-18 22:29:59.625 +00:00','2025-07-18 22:29:59.625 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 9;
[0mPOST /api/budgets [32m201[0m 42.945 ms - 489[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Dfsdf" (ID: 9):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 10.246 ms - 1161[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.264 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 13.232 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 12.820 ms - -[0m
[0mGET /api/networth [32m200[0m 13.901 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.770 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.732 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 18.080 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 24.217 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 20.063 ms - 1060[0m
[0mGET /api/accounts [36m304[0m 20.431 ms - -[0m
[0mGET /api/transactions [36m304[0m 26.307 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 10.101 ms - -[0m
[0mGET /api/auth/me [36m304[0m 12.933 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 5.330 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.345 ms - -[0m
[0mGET /api/categories [36m304[0m 3.794 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.442 ms - -[0m
[0mGET /api/categories [36m304[0m 1.429 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '9' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 9
Executing (default): DELETE FROM "Budgets" WHERE "id" = 9
[0mDELETE /api/budgets/9 [32m204[0m 23.338 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-08-18');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T18:11:46.393Z to 2025-08-18T18:11:46.393Z
  Found 3 transactions, total spent: 30
[0mGET /api/budgets [32m200[0m 4.671 ms - 772[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.913 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 6.474 ms - -[0m
[0mGET /api/accounts [36m304[0m 5.230 ms - -[0m
[0mGET /api/networth [32m200[0m 7.028 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 3.194 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.540 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 1.717 ms - -[0m
[0mGET /api/transactions [36m304[0m 9.460 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 2.589 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 1.674 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 3.547 ms - 1060[0m
[0mGET /api/transactions [36m304[0m 8.240 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 2.666 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.157 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.517 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.179 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 3.723 ms - -[0m
[0mGET /api/categories [36m304[0m 6.352 ms - -[0m
[0mGET /api/auth/me [36m304[0m 7.753 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.738 ms - -[0m
[0mGET /api/categories [36m304[0m 6.075 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 6.388 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 6.192 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 11.646 ms - -[0m
[0mGET /api/networth [32m200[0m 11.810 ms - 1060[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 2.271 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 2.548 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Создание транзакции: {
  user_id: 4,
  account_id: 2,
  category_id: 1,
  amount: 10,
  transaction_type: 'expense',
  description: '',
  transfer_to: undefined
}
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol", "currency"."is_active" AS "currency.is_active", "currency"."createdAt" AS "currency.createdAt", "currency"."updatedAt" AS "currency.updatedAt" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."id" = 2 AND "Account"."user_id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "Transactions" ("id","user_id","account_id","category_id","amount","transaction_type","description","transaction_date","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9) RETURNING "id","user_id","account_id","category_id","amount","transaction_type","transfer_to","description","transaction_date","createdAt","updatedAt";
Транзакция создана: 51
Executing (default): UPDATE "Accounts" SET "balance"=$1,"updatedAt"=$2 WHERE "id" = $3
Баланс счета обновлен: 3822.54 -> 3812.54
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "Transaction"."id" = 51;
[0mPOST /api/transactions [32m201[0m 44.592 ms - 824[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/transactions [32m200[0m 10.140 ms - 34488[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [32m200[0m 6.739 ms - 1539[0m
[0mGET /api/networth [32m200[0m 11.017 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 11.741 ms - -[0m
[0mGET /api/transactions [36m304[0m 20.181 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.862 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 11.615 ms - 1062[0m
[0mGET /api/accounts [36m304[0m 11.514 ms - -[0m
[0mGET /api/transactions [36m304[0m 15.412 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 5.583 ms - -[0m
[0mGET /api/transactions [36m304[0m 9.757 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 2.177 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.538 ms - -[0m
[0mGET /api/categories [36m304[0m 2.348 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.733 ms - -[0m
[0mGET /api/categories [36m304[0m 1.507 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '1' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"custom_end_date"=$4,"updated_at"=$5 WHERE "id" = $6
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 1
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,1,1,'2025-07-18 22:32:19.396 +00:00','2025-07-18 22:32:19.396 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 1;
[0mPUT /api/budgets/1 [32m200[0m 458.261 ms - 489[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 15.256 ms - 784[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 10.795 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.026 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 7.344 ms - -[0m
[0mGET /api/networth [32m200[0m 7.202 ms - 1062[0m
[0mGET /api/accounts [36m304[0m 7.207 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 13.114 ms - -[0m
[0mGET /api/transactions [36m304[0m 19.246 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 2.268 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.058 ms - -[0m
[0mGET /api/categories [36m304[0m 2.888 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 0.533 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 3.307 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '1' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 1
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,1,1,'2025-07-18 22:32:43.403 +00:00','2025-07-18 22:32:43.403 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 1;
[0mPUT /api/budgets/1 [32m200[0m 14.301 ms - 491[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 6.615 ms - 789[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 14.192 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 19.983 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 21.118 ms - -[0m
[0mGET /api/networth [32m200[0m 21.667 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 27.434 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 5.291 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 7.874 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.083 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.751 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.650 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.198 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 1.735 ms - -[0m
[0mGET /api/transactions [36m304[0m 7.602 ms - -[0m
[0mGET /api/networth [32m200[0m 6.137 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 21.824 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/transactions [36m304[0m 32.134 ms - -[0m
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [36m304[0m 36.446 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.509 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.283 ms - -[0m
[0mGET /api/categories [36m304[0m 5.654 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.712 ms - -[0m
[0mGET /api/categories [36m304[0m 2.757 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 22:43:25.487 +00:00','2025-07-18 22:43:25.487 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 31.889 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 9.638 ms - 789[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 14.966 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.850 ms - -[0m
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.858 ms - -[0m
[0mGET /api/categories [36m304[0m 2.965 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.911 ms - -[0m
[0mGET /api/categories [36m304[0m 5.251 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.263 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 11.624 ms - -[0m
Запрос курсов валют для базовой валюты: USD
[0mGET /api/accounts [36m304[0m 8.036 ms - -[0m
[0mGET /api/networth [32m200[0m 615.986 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 2.759 ms - -[0m
[0mGET /api/categories [36m304[0m 4.448 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.692 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.593 ms - -[0m
[0mGET /api/categories [36m304[0m 5.631 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.780 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 9.210 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 14.449 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 17.977 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
[0mGET /api/auth/me [36m304[0m 30.352 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/transactions [36m304[0m 41.322 ms - -[0m
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [36m304[0m 46.891 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.318 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.947 ms - -[0m
[0mGET /api/categories [36m304[0m 4.362 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.086 ms - -[0m
[0mGET /api/categories [36m304[0m 3.155 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 1;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,2,1,'2025-07-18 23:01:57.520 +00:00','2025-07-18 23:01:57.520 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 2;
[0mPUT /api/budgets/2 [32m200[0m 33.294 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 8.489 ms - 789[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 17.447 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 11.456 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 10.761 ms - -[0m
[0mGET /api/auth/me [36m304[0m 15.180 ms - -[0m
[0mGET /api/networth [32m200[0m 11.906 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.497 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 8.343 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 5.347 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.052 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [36m304[0m 13.146 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/networth [32m200[0m 10.170 ms - 1062[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 9.951 ms - -[0m
[0mGET /api/accounts [36m304[0m 9.342 ms - -[0m
[0mGET /api/transactions [36m304[0m 20.021 ms - -[0m
[0mGET /api/networth [32m200[0m 12.430 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.083 ms - -[0m
[0mGET /api/auth/me [36m304[0m 5.542 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.383 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.031 ms - -[0m
[0mGET /api/categories [36m304[0m 3.911 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.056 ms - -[0m
[0mGET /api/categories [36m304[0m 2.857 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,10,7,'2025-07-18 23:02:27.292 +00:00','2025-07-18 23:02:27.292 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 10;
[0mPOST /api/budgets [32m201[0m 149.617 ms - 485[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (7) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/auth/me [36m304[0m 5.440 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 10):
  Categories: [7]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 18.851 ms - 1173[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 13.955 ms - -[0m
[0mGET /api/networth [32m200[0m 15.549 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 19.650 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.958 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.883 ms - -[0m
[0mGET /api/transactions [36m304[0m 8.690 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 22.951 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 13.654 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (7) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Ffff" (ID: 10):
  Categories: [7]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [36m304[0m 24.246 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.147 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 18.421 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 20.279 ms - 1062[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 13.291 ms - -[0m
[0mGET /api/accounts [36m304[0m 4.579 ms - -[0m
[0mGET /api/transactions [36m304[0m 27.288 ms - -[0m
[0mGET /api/networth [32m200[0m 7.934 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.421 ms - -[0m
[0mGET /api/auth/me [36m304[0m 6.441 ms - -[0m
[0mGET /api/auth/me [36m304[0m 3.198 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.175 ms - -[0m
[0mGET /api/transactions [36m304[0m 15.875 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 4.559 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.106 ms - -[0m
[0mGET /api/categories [36m304[0m 6.448 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.693 ms - -[0m
[0mGET /api/categories [36m304[0m 2.406 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '10' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 10
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 7;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,10,7,'2025-07-18 23:07:33.020 +00:00','2025-07-18 23:07:33.020 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 10;
[0mPUT /api/budgets/10 [32m200[0m 33.350 ms - 486[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (7) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-08-19');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 10):
  Categories: [7]
  Period: 2025-07-19T00:00:00.000Z to 2025-08-19T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 10.341 ms - 1174[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.266 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.663 ms - -[0m
[0mGET /api/auth/me [36m304[0m 4.418 ms - -[0m
[0mGET /api/categories [36m304[0m 3.949 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 2.777 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.617 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '10' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_end_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 10
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 7;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,10,7,'2025-07-18 23:07:38.446 +00:00','2025-07-18 23:07:38.446 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 10;
[0mPUT /api/budgets/10 [32m200[0m 23.967 ms - 485[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (7) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ffff" (ID: 10):
  Categories: [7]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 6.334 ms - 1173[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 13.148 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 7.682 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 11.797 ms - -[0m
[0mGET /api/networth [32m200[0m 11.563 ms - 1062[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 5.531 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.554 ms - -[0m
[0mGET /api/transactions [36m304[0m 9.078 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 5.576 ms - -[0m
[0mGET /api/categories [36m304[0m 5.302 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.904 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.753 ms - -[0m
[0mGET /api/categories [36m304[0m 3.648 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '10' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 10
Executing (default): DELETE FROM "Budgets" WHERE "id" = 10
[0mDELETE /api/budgets/10 [32m204[0m 15.238 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Groceries" (ID: 2):
  Categories: [1]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 8.212 ms - 789[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.163 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 4.014 ms - -[0m
[0mGET /api/transactions [36m304[0m 13.217 ms - -[0m
[0mGET /api/networth [32m200[0m 12.655 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 11.539 ms - -[0m
[0mGET /api/auth/me [36m304[0m 14.118 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 6.067 ms - -[0m
[0mGET /api/currencies [36m304[0m 4.693 ms - -[0m
[0mGET /api/categories [36m304[0m 6.175 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.244 ms - -[0m
[0mGET /api/categories [36m304[0m 3.061 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '2' AND "Budget"."user_id" = 4;
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 2
Executing (default): DELETE FROM "Budgets" WHERE "id" = 2
[0mDELETE /api/budgets/2 [32m204[0m 8.035 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 7.007 ms - 395[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.909 ms - -[0m
[0mGET /api/transactions [36m304[0m 8.578 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 6.368 ms - -[0m
[0mGET /api/networth [32m200[0m 10.888 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.408 ms - -[0m
[0mGET /api/categories [36m304[0m 4.817 ms - -[0m
[0mGET /api/auth/me [36m304[0m 6.586 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.202 ms - -[0m
[0mGET /api/categories [36m304[0m 4.678 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,11,9,'2025-07-18 23:08:25.156 +00:00','2025-07-18 23:08:25.156 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 11;
[0mPOST /api/budgets [32m201[0m 36.880 ms - 494[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 6.821 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 12.823 ms - 788[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 9.276 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 12.525 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 16.343 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.239 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 3.826 ms - -[0m
[0mGET /api/transactions [36m304[0m 11.860 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 35.552 ms - -[0m
[0mGET /api/networth [32m200[0m 37.316 ms - 1062[0m
[0mGET /api/accounts [36m304[0m 37.187 ms - -[0m
[0mGET /api/transactions [36m304[0m 47.030 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.762 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/transactions [36m304[0m 12.272 ms - -[0m
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [36m304[0m 13.985 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.734 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 10.527 ms - -[0m
[0mGET /api/networth [32m200[0m 9.971 ms - 1062[0m
[0mGET /api/accounts [36m304[0m 9.582 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.722 ms - -[0m
[0mGET /api/categories [36m304[0m 5.187 ms - -[0m
[0mGET /api/auth/me [36m304[0m 6.986 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.195 ms - -[0m
[0mGET /api/categories [36m304[0m 4.056 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:18:55.939 +00:00','2025-07-18 23:18:55.939 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPOST /api/budgets [32m201[0m 47.834 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 15.977 ms - 1184[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.658 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 14.933 ms - -[0m
[0mGET /api/transactions [36m304[0m 21.506 ms - -[0m
[0mGET /api/networth [32m200[0m 19.799 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.924 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 10.158 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 18.980 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 27.363 ms - -[0m
[0mGET /api/accounts [36m304[0m 21.468 ms - -[0m
[0mGET /api/networth [32m200[0m 22.750 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 31.576 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.068 ms - -[0m
[0mGET /api/transactions [36m304[0m 13.663 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 3.805 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.018 ms - -[0m
[0mGET /api/categories [36m304[0m 5.715 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.956 ms - -[0m
[0mGET /api/categories [36m304[0m 3.175 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:23:38.459 +00:00','2025-07-18 23:23:38.459 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 31.754 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 10.259 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 11.129 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 14.897 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 17.561 ms - -[0m
[0mGET /api/categories [36m304[0m 17.715 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.630 ms - -[0m
[0mGET /api/categories [36m304[0m 1.647 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:23:54.703 +00:00','2025-07-18 23:23:54.703 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 30.864 ms - 499[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-17' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-17T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 9.933 ms - 1186[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 18.233 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 3.856 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.553 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.569 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.789 ms - -[0m
[0mGET /api/categories [36m304[0m 3.058 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"updated_at"=$4 WHERE "id" = $5
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:24:00.612 +00:00','2025-07-18 23:24:00.612 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 20.369 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 8.686 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 12.365 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 29.864 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.044 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 7.603 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 8.835 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/accounts [36m304[0m 27.002 ms - -[0m
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 27.168 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 25.582 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 33.331 ms - -[0m
[0mGET /api/accounts [36m304[0m 6.554 ms - -[0m
[0mGET /api/networth [32m200[0m 33.076 ms - 1062[0m
[0mGET /api/networth [32m200[0m 7.427 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 28.969 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 27.427 ms - -[0m
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
[0mGET /api/transactions [36m304[0m 35.210 ms - -[0m
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [36m304[0m 40.253 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/currencies [36m304[0m 2.679 ms - -[0m
[0mGET /api/categories [36m304[0m 4.932 ms - -[0m
[0mGET /api/auth/me [36m304[0m 7.558 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.260 ms - -[0m
[0mGET /api/categories [36m304[0m 5.654 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:30:01.501 +00:00','2025-07-18 23:30:01.501 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 34.839 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 9.104 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 17.770 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 5.640 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 6.770 ms - -[0m
[0mGET /api/networth [32m200[0m 7.763 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 11.593 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 12.820 ms - -[0m
[0mGET /api/auth/me [36m304[0m 14.920 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 3.902 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.363 ms - -[0m
[0mGET /api/categories [36m304[0m 4.554 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.931 ms - -[0m
[0mGET /api/categories [36m304[0m 3.030 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"custom_end_date"=$4,"updated_at"=$5 WHERE "id" = $6
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:30:24.345 +00:00','2025-07-18 23:30:24.345 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 45.178 ms - 499[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-17' AND "Transaction"."transaction_date" < '2025-07-20');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-17T00:00:00.000Z to 2025-07-20T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 11.667 ms - 1186[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 23.769 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/auth/me [36m304[0m 26.933 ms - -[0m
[0mGET /api/accounts [36m304[0m 21.801 ms - -[0m
[0mGET /api/networth [32m200[0m 22.889 ms - 1062[0m
[0mGET /api/transactions [36m304[0m 29.094 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 4.628 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.161 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.696 ms - -[0m
[0mGET /api/currencies [36m304[0m 3.140 ms - -[0m
[0mGET /api/categories [36m304[0m 5.577 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.828 ms - -[0m
[0mGET /api/categories [36m304[0m 2.686 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"period_type"=$2,"custom_start_date"=$3,"custom_end_date"=$4,"updated_at"=$5 WHERE "id" = $6
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:30:44.223 +00:00','2025-07-18 23:30:44.223 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 26.179 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 8.525 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 14.560 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 19.891 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/networth [32m200[0m 16.565 ms - 1062[0m
[0mGET /api/accounts [36m304[0m 16.691 ms - -[0m
[0mGET /api/transactions [36m304[0m 22.092 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/auth/me [36m304[0m 7.290 ms - -[0m
[0mGET /api/transactions [36m304[0m 12.108 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 4.218 ms - -[0m
[0mGET /api/currencies [36m304[0m 2.438 ms - -[0m
[0mGET /api/categories [36m304[0m 4.522 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.826 ms - -[0m
[0mGET /api/categories [36m304[0m 3.030 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:35:15.108 +00:00','2025-07-18 23:35:15.108 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 43.579 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 14.709 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 22.333 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 10.808 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 24.336 ms - -[0m
[0mGET /api/categories [36m304[0m 16.005 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.711 ms - -[0m
[0mGET /api/categories [36m304[0m 1.873 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:39:18.405 +00:00','2025-07-18 23:39:18.405 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 25.205 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 9.801 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 21.425 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 16.301 ms - -[0m
[0mGET /api/categories [36m304[0m 19.240 ms - -[0m
[0mGET /api/auth/me [36m304[0m 20.572 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.875 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/categories [36m304[0m 4.357 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:43:17.854 +00:00','2025-07-18 23:43:17.854 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 28.298 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 11.420 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 18.869 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 14.334 ms - -[0m
[0mGET /api/auth/me [36m304[0m 21.696 ms - -[0m
[0mGET /api/categories [36m304[0m 16.509 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.574 ms - -[0m
[0mGET /api/categories [36m304[0m 1.722 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '12' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 12
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,12,14,'2025-07-18 23:44:43.422 +00:00','2025-07-18 23:44:43.422 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 12;
[0mPUT /api/budgets/12 [32m200[0m 29.666 ms - 497[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
[0mGET /api/budgets [32m200[0m 10.739 ms - 1184[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 19.314 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 12.629 ms - -[0m
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/categories [36m304[0m 17.040 ms - -[0m
[0mGET /api/auth/me [36m304[0m 18.724 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 2.145 ms - -[0m
[0mGET /api/categories [36m304[0m 4.711 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 9.372 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
[0mGET /api/accounts [36m304[0m 8.878 ms - -[0m
Запрос курсов валют для базовой валюты: USD
[0mGET /api/transactions [36m304[0m 20.118 ms - -[0m
[0mGET /api/networth [32m200[0m 679.888 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/currencies [36m304[0m 1.492 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/auth/me [36m304[0m 6.189 ms - -[0m
[0mGET /api/categories [36m304[0m 7.597 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 1.485 ms - -[0m
[0mGET /api/categories [36m304[0m 3.882 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): INSERT INTO "Budgets" ("id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) RETURNING "id","user_id","name","limit_amount","currency","period_type","custom_start_date","custom_end_date","rollover","is_active","created_at","updated_at";
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,13,14,'2025-07-18 23:45:39.574 +00:00','2025-07-18 23:45:39.574 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 13;
[0mPOST /api/budgets [32m201[0m 22.851 ms - 492[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 4.734 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Ddddd" (ID: 13):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/transactions [36m304[0m 6.908 ms - -[0m
[0mGET /api/accounts [36m304[0m 6.011 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 11.821 ms - 1575[0m
[0mGET /api/networth [32m200[0m 8.562 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 3.568 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 14.865 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ddddd" (ID: 13):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [36m304[0m 17.766 ms - -[0m
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 18.692 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/accounts [36m304[0m 16.589 ms - -[0m
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/networth [32m200[0m 17.643 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 17.720 ms - -[0m
[0mGET /api/transactions [36m304[0m 20.509 ms - -[0m
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true ORDER BY "Account"."createdAt" DESC;
Executing (default): SELECT "Account"."id", "Account"."user_id", "Account"."account_type", "Account"."account_name", "Account"."currency_id", "Account"."balance", "Account"."is_active", "Account"."description", "Account"."createdAt", "Account"."updatedAt", "currency"."id" AS "currency.id", "currency"."code" AS "currency.code", "currency"."name" AS "currency.name", "currency"."symbol" AS "currency.symbol" FROM "Accounts" AS "Account" LEFT OUTER JOIN "Currencies" AS "currency" ON "Account"."currency_id" = "currency"."id" WHERE "Account"."user_id" = 4 AND "Account"."is_active" = true;
[0mGET /api/transactions [36m304[0m 8.929 ms - -[0m
[0mGET /api/accounts [36m304[0m 4.863 ms - -[0m
[0mGET /api/networth [32m200[0m 6.940 ms - 1062[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 2.238 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.661 ms - -[0m
[0mGET /api/auth/me [36m304[0m 2.669 ms - -[0m
[0mGET /api/auth/me [36m304[0m 3.473 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
[0mGET /api/auth/me [36m304[0m 13.584 ms - -[0m
[0mGET /api/transactions [36m304[0m 18.131 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "User"."id", "User"."name", "User"."login", "User"."password", "User"."email", "User"."phone", "User"."country_id", "User"."primary_currency_id", "User"."createdAt", "User"."updatedAt", "primaryCurrency"."id" AS "primaryCurrency.id", "primaryCurrency"."code" AS "primaryCurrency.code", "primaryCurrency"."name" AS "primaryCurrency.name", "primaryCurrency"."symbol" AS "primaryCurrency.symbol" FROM "Users" AS "User" LEFT OUTER JOIN "Currencies" AS "primaryCurrency" ON "User"."primary_currency_id" = "primaryCurrency"."id" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
[0mGET /api/auth/me [36m304[0m 2.806 ms - -[0m
[0mGET /api/currencies [36m304[0m 1.194 ms - -[0m
[0mGET /api/categories [36m304[0m 2.503 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "code", "name", "symbol" FROM "Currencies" AS "Currency" WHERE "Currency"."is_active" = true ORDER BY "Currency"."code" ASC;
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" ORDER BY "Category"."category_name" ASC;
[0mGET /api/currencies [36m304[0m 0.544 ms - -[0m
[0mGET /api/categories [36m304[0m 1.384 ms - -[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "id", "user_id", "name", "limit_amount", "currency", "period_type", "custom_start_date", "custom_end_date", "rollover", "is_active", "created_at", "updated_at" FROM "Budgets" AS "Budget" WHERE "Budget"."id" = '13' AND "Budget"."user_id" = 4;
Executing (default): UPDATE "Budgets" SET "limit_amount"=$1,"updated_at"=$2 WHERE "id" = $3
Executing (default): DELETE FROM "BudgetCategories" WHERE "budget_id" = 13
Executing (default): SELECT "id", "category_type", "category_name", "createdAt", "updatedAt" FROM "Categories" AS "Category" WHERE "Category"."id" = 14;
Executing (default): INSERT INTO "BudgetCategories" ("id","budget_id","category_id","created_at","updated_at") VALUES (DEFAULT,13,14,'2025-07-18 23:48:15.154 +00:00','2025-07-18 23:48:15.154 +00:00') RETURNING "id","budget_id","category_id","created_at","updated_at";
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."id" = 13;
[0mPUT /api/budgets/13 [32m200[0m 17.671 ms - 492[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
Executing (default): SELECT "Budget"."id", "Budget"."user_id", "Budget"."name", "Budget"."limit_amount", "Budget"."currency", "Budget"."period_type", "Budget"."custom_start_date", "Budget"."custom_end_date", "Budget"."rollover", "Budget"."is_active", "Budget"."created_at", "Budget"."updated_at", "categories"."id" AS "categories.id", "categories"."budget_id" AS "categories.budget_id", "categories"."category_id" AS "categories.category_id", "categories"."created_at" AS "categories.created_at", "categories"."updated_at" AS "categories.updated_at", "categories->category"."id" AS "categories.category.id", "categories->category"."category_name" AS "categories.category.category_name", "categories->category"."category_type" AS "categories.category.category_type" FROM "Budgets" AS "Budget" LEFT OUTER JOIN "BudgetCategories" AS "categories" ON "Budget"."id" = "categories"."budget_id" LEFT OUTER JOIN "Categories" AS "categories->category" ON "categories"."category_id" = "categories->category"."id" WHERE "Budget"."user_id" = 4 ORDER BY "Budget"."created_at" DESC;
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (14) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (9) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-19' AND "Transaction"."transaction_date" < '2025-07-26');
Executing (default): SELECT "id", "user_id", "account_id", "category_id", "amount", "transaction_type", "transfer_to", "description", "transaction_date", "createdAt", "updatedAt" FROM "Transactions" AS "Transaction" WHERE "Transaction"."user_id" = 4 AND "Transaction"."category_id" IN (1) AND "Transaction"."transaction_type" = 'expense' AND ("Transaction"."transaction_date" >= '2025-07-18' AND "Transaction"."transaction_date" < '2025-07-26');
Budget "Ууууу" (ID: 12):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "Test" (ID: 1):
  Categories: [1]
  Period: 2025-07-18T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 4 transactions, total spent: 40
Budget "Ddddd" (ID: 13):
  Categories: [14]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
Budget "аааа" (ID: 11):
  Categories: [9]
  Period: 2025-07-19T00:00:00.000Z to 2025-07-26T00:00:00.000Z
  Found 0 transactions, total spent: 0
[0mGET /api/budgets [32m200[0m 10.716 ms - 1575[0m
Executing (default): SELECT "id", "name", "login", "password", "email", "phone", "country_id", "primary_currency_id", "createdAt", "updatedAt" FROM "Users" AS "User" WHERE "User"."id" = 4;
🔍 Fetching transactions with ORDER BY createdAt DESC
Executing (default): SELECT "Transaction"."id", "Transaction"."user_id", "Transaction"."account_id", "Transaction"."category_id", "Transaction"."amount", "Transaction"."transaction_type", "Transaction"."transfer_to", "Transaction"."description", "Transaction"."transaction_date", "Transaction"."createdAt", "Transaction"."updatedAt", "account"."id" AS "account.id", "account"."user_id" AS "account.user_id", "account"."account_type" AS "account.account_type", "account"."account_name" AS "account.account_name", "account"."currency_id" AS "account.currency_id", "account"."balance" AS "account.balance", "account"."is_active" AS "account.is_active", "account"."description" AS "account.description", "account"."createdAt" AS "account.createdAt", "account"."updatedAt" AS "account.updatedAt", "account->currency"."id" AS "account.currency.id", "account->currency"."code" AS "account.currency.code", "account->currency"."name" AS "account.currency.name", "account->currency"."symbol" AS "account.currency.symbol", "account->currency"."is_active" AS "account.currency.is_active", "account->currency"."createdAt" AS "account.currency.createdAt", "account->currency"."updatedAt" AS "account.currency.updatedAt", "targetAccount"."id" AS "targetAccount.id", "targetAccount"."user_id" AS "targetAccount.user_id", "targetAccount"."account_type" AS "targetAccount.account_type", "targetAccount"."account_name" AS "targetAccount.account_name", "targetAccount"."currency_id" AS "targetAccount.currency_id", "targetAccount"."balance" AS "targetAccount.balance", "targetAccount"."is_active" AS "targetAccount.is_active", "targetAccount"."description" AS "targetAccount.description", "targetAccount"."createdAt" AS "targetAccount.createdAt", "targetAccount"."updatedAt" AS "targetAccount.updatedAt", "targetAccount->currency"."id" AS "targetAccount.currency.id", "targetAccount->currency"."code" AS "targetAccount.currency.code", "targetAccount->currency"."name" AS "targetAccount.currency.name", "targetAccount->currency"."symbol" AS "targetAccount.currency.symbol", "targetAccount->currency"."is_active" AS "targetAccount.currency.is_active", "targetAccount->currency"."createdAt" AS "targetAccount.currency.createdAt", "targetAccount->currency"."updatedAt" AS "targetAccount.currency.updatedAt", "category"."id" AS "category.id", "category"."category_type" AS "category.category_type", "category"."category_name" AS "category.category_name", "category"."createdAt" AS "category.createdAt", "category"."updatedAt" AS "category.updatedAt" FROM "Transactions" AS "Transaction" LEFT OUTER JOIN "Accounts" AS "account" ON "Transaction"."account_id" = "account"."id" LEFT OUTER JOIN "Currencies" AS "account->currency" ON "account"."currency_id" = "account->currency"."id" LEFT OUTER JOIN "Accounts" AS "targetAccount" ON "Transaction"."transfer_to" = "targetAccount"."id" LEFT OUTER JOIN "Currencies" AS "targetAccount->currency" ON "targetAccount"."currency_id" = "targetAccount->currency"."id" LEFT OUTER JOIN "Categories" AS "category" ON "Transaction"."category_id" = "category"."id" WHERE "account"."user_id" = 4 ORDER BY "Transaction"."createdAt" DESC;
[0mGET /api/transactions [36m304[0m 14.242 ms - -[0m
